<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <title>Dashboard Britsedu</title>
        <%- include('../../partials/head') %>
        <link href="<%= hostname %>dashboard/css/styles.css" rel="stylesheet" />
        <link href="https://cdn.jsdelivr.net/npm/simple-datatables@latest/dist/style.css" rel="stylesheet" />
        <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
        <script data-search-pseudo-elements defer src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/js/all.min.js" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

        <style>
            #layoutSidenav_content > main > div > div:nth-child(1) > div.card-body > div {
                overflow-x:auto;
            }
            
            /* Clean icon styling */
            [data-feather] {
                width: 20px;
                height: 20px;
                stroke-width: 2;
            }
            
            /* Action button icon containers */
            .icon-container {
                display: inline-flex;
                align-items: center;
                justify-content: center;
                width: 36px;
                height: 36px;
                border-radius: 8px;
                transition: all 0.2s ease;
                text-decoration: none;
            }
            
            .icon-container:hover {
                transform: translateY(-1px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.1);
                text-decoration: none;
            }
            
            /* Color variants for action icons */
            .icon-success {
                background: #d4edda;
                color: #155724;
                border: 1px solid #c3e6cb;
            }
            
            .icon-success:hover {
                background: #c3e6cb;
                color: #155724;
            }
            
            .icon-danger {
                background: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
            }
            
            .icon-danger:hover {
                background: #f5c6cb;
                color: #721c24;
            }
            
            .icon-warning {
                background: #fff3cd;
                color: #856404;
                border: 1px solid #ffeaa7;
            }
            
            .icon-warning:hover {
                background: #ffeaa7;
                color: #856404;
            }
            
            .icon-info {
                background: #d1ecf1;
                color: #0c5460;
                border: 1px solid #bee5eb;
            }
            
            .icon-info:hover {
                background: #bee5eb;
                color: #0c5460;
            }
            
            /* Button icons - keep them simple */
            .btn [data-feather] {
                width: 18px;
                height: 18px;
                margin-right: 8px;
            }
            
            /* Header icons */
            .page-header-icon [data-feather] {
                width: 32px;
                height: 32px;
                padding: 8px;
                background: rgba(255, 255, 255, 0.15);
                border-radius: 8px;
                color: white;
            }
        </style>
    </head>
    <body class="nav-fixed">
       <%- include('partials/topNav') %> 
        <div id="layoutSidenav">
        <%- include('partials/sideNav') %>   
        <div id="layoutSidenav_content">
            <main>
                <header class="page-header page-header-dark bg-gradient-primary-to-secondary pb-10">
                    <div class="container-xl px-4">
                        <div class="page-header-content pt-4">
                            <div class="row align-items-center justify-content-between">
                                <div class="col-auto mt-4">
                                    <h1 class="page-header-title">
                                        <div class="page-header-icon"><i data-feather="alert-circle"></i></div>
                                        Welcome, Master!
                                    </h1>
                                    <div class="page-header-subtitle">Britsedu, <span style="font-style: italic;">your key to excel</span></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </header>
                <!-- Main page content-->
                <div class="container-xl px-4">
                    <div class="card mt-n10">
                        <div class="card-header">Data Siswa</div>
                        <div class="card-body">
                            <div class="d-flex justify-content-between mb-3">
                                <div>
                                    <div class="btn-group">
                                        <a href="/admin/export-users-csv" class="btn btn-primary">
                                            <i data-feather="download" class="me-2"></i> Export Complete CSV
                                        </a>
                                        <a href="/admin/export-users-basic-csv" class="btn btn-outline-primary">
                                            <i data-feather="download" class="me-2"></i> Export Basic CSV
                                        </a>
                                    </div>
                                </div>
                                <div>
                                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#importCSVModal">
                                        <i data-feather="upload" class="me-2"></i> Import CSV
                                    </button>
                                </div>
                            </div>
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Paket</th>
                                        <th>Program</th>
                                        <th>School</th>
                                        <th>Phone</th>
                                        <th>Google ID</th>
                                        <th>Status</th>
                                        <th style="width: 150px !important;">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% siswas.forEach(siswa => { %>
                                        <tr>
                                            <!-- User Name with Photo -->
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="avatar me-2">
                                                        <img class="avatar-img" style="width: 40px; height: 40px;" src="<%= siswa.photos || '/assets/img/default-profile.png' %>" 
                                                        alt="Profile Photo" referrerpolicy="no-referrer"/>
                                                    </div>
                                                    <%= siswa.nama || 'No Name' %>
                                                </div>
                                            </td>
                            
                                            <!-- Email -->
                                            <td><%= siswa.email || 'No Email' %></td>
                            
                                            <!-- Role (Assuming `paket` is the role) -->
                                            <td><%= siswa.paket || 'Unknown Role' %></td>
                                            <td><%= siswa.program || 'Unknown program' %></td>
                            
                                            <!-- School -->
                                            <td><%= siswa.asal_sekolah || 'No School Info' %></td>
                            
                                            <!-- Phone -->
                                            <td><%= siswa.phone || 'No Phone' %></td>
                            
                                            <!-- Google ID -->
                                            <td><%= siswa.google_id || 'Not Linked' %></td>
                            
                                            <!-- Member Status -->
                                            <td>
                                                <% if (siswa.isMember) { %>
                                                    <span class="badge bg-success me-2" style="color: white;">Siswa</span>
                                                    <a class="icon-container icon-danger" href="#" onclick="cancelMember('<%= siswa.id %>')" title="Cancel Membership">
                                                        <i data-feather="user-x"></i>
                                                    </a>
                                                <% } else { %>
                                                    Acc  
                                                    <a class="icon-container icon-success" href="#" onclick="acceptAsMember('<%= siswa.id %>')" title="Accept as Member">
                                                        <i data-feather="user-check"></i>
                                                    </a>
                                                <% } %>
                                            </td>
                            
                                            <!-- Actions -->
                                            <td>
                                                <!-- <a class="icon-container icon-warning me-2" href="#" onclick="return alert('belum bisa hehe')">
                                                    <i data-feather="edit"></i>
                                                </a>
                                                <a class="icon-container icon-danger me-2" href="/delete-user/<%= siswa.id %>" onclick="return confirm('Are you sure you want to delete this user?');">
                                                    <i data-feather="trash-2"></i>
                                                </a> -->
                                                <% if (siswa.activeSessionId) { %>
                                                    <a class="icon-container icon-warning me-2" href="#" onclick="resetUserSession('<%= siswa.id %>')" title="Reset User Session">
                                                        <i data-feather="refresh-cw"></i>
                                                    </a>
                                                <% } %>
                                                <a class="icon-container icon-danger me-2" href="#" onclick="resetUserExams('<%= siswa.id %>')" title="Reset User Exams">
                                                    <i data-feather="delete"></i>
                                                </a>
                                                <a href="/admin/user-report/<%= siswa.id %>" 
                                                   class="icon-container icon-info me-2">
                                                    <i data-feather="file-text"></i>
                                                </a>
                                                <a class="icon-container icon-danger" href="#" onclick="deleteUser('<%= siswa.id %>')" title="Delete User">
                                                    <i data-feather="trash-2"></i>
                                                </a>
                                           
                                            </td>
                                        </tr>
                                    <% }); %>
                                </tbody>
                            </table>

                            <% if (typeof pagination !== 'undefined' && pagination.totalPages > 1) { %>
                            <div class="d-flex justify-content-between align-items-center mt-4">
                                <div class="text-muted">
                                    Menampilkan <%= pagination.startIndex %> - <%= pagination.endIndex %> dari <%= pagination.totalUsers %> peserta
                                </div>
                                <nav aria-label="Page navigation">
                                    <ul class="pagination pagination-sm mb-0">
                                        <li class="page-item <%= pagination.currentPage === 1 ? 'disabled' : '' %>">
                                            <a class="page-link" href="?page=1&limit=<%= pagination.limit %>" aria-label="First">
                                                <span aria-hidden="true">&laquo;&laquo;</span>
                                            </a>
                                        </li>
                                        <li class="page-item <%= !pagination.hasPrevPage ? 'disabled' : '' %>">
                                            <a class="page-link" href="?page=<%= pagination.currentPage - 1 %>&limit=<%= pagination.limit %>" aria-label="Previous">
                                                <span aria-hidden="true">&laquo;</span>
                                            </a>
                                        </li>
                                        <% 
                                        const startPage = Math.max(1, pagination.currentPage - 2);
                                        const endPage = Math.min(pagination.totalPages, pagination.currentPage + 2);
                                        %>
                                        <% if (startPage > 1) { %>
                                            <li class="page-item disabled"><span class="page-link">...</span></li>
                                        <% } %>
                                        <% for(let i = startPage; i <= endPage; i++) { %>
                                            <li class="page-item <%= i === pagination.currentPage ? 'active' : '' %>">
                                                <a class="page-link" href="?page=<%= i %>&limit=<%= pagination.limit %>"><%= i %></a>
                                            </li>
                                        <% } %>
                                        <% if (endPage < pagination.totalPages) { %>
                                            <li class="page-item disabled"><span class="page-link">...</span></li>
                                        <% } %>
                                        <li class="page-item <%= !pagination.hasNextPage ? 'disabled' : '' %>">
                                            <a class="page-link" href="?page=<%= pagination.currentPage + 1 %>&limit=<%= pagination.limit %>" aria-label="Next">
                                                <span aria-hidden="true">&raquo;</span>
                                            </a>
                                        </li>
                                        <li class="page-item <%= pagination.currentPage === pagination.totalPages ? 'disabled' : '' %>">
                                            <a class="page-link" href="?page=<%= pagination.totalPages %>&limit=<%= pagination.limit %>" aria-label="Last">
                                                <span aria-hidden="true">&raquo;&raquo;</span>
                                            </a>
                                        </li>
                                    </ul>
                                </nav>
                                <div class="d-flex align-items-center">
                                    <label for="pageSize" class="form-label me-2 mb-0">Per halaman:</label>
                                    <select id="pageSize" class="form-select form-select-sm" style="width: auto;" onchange="changePageSize(this.value)">
                                        <option value="25" <%= pagination.limit === 25 ? 'selected' : '' %>>25</option>
                                        <option value="50" <%= pagination.limit === 50 ? 'selected' : '' %>>50</option>
                                        <option value="100" <%= pagination.limit === 100 ? 'selected' : '' %>>100</option>
                                        <option value="200" <%= pagination.limit === 200 ? 'selected' : '' %>>200</option>
                                        <option value="500" <%= pagination.limit === 500 ? 'selected' : '' %>>500</option>
                                    </select>
                                </div>
                                <div class="d-flex align-items-center ms-3">
                                    <label for="goToPage" class="form-label me-2 mb-0">Halaman:</label>
                                    <input type="number" id="goToPage" class="form-control form-control-sm" style="width: 80px;" 
                                        min="1" max="<%= pagination.totalPages %>" value="<%= pagination.currentPage %>"
                                        onkeypress="if(event.keyCode===13) goToPage()">
                                    <span class="text-muted ms-1">/ <%= pagination.totalPages %></span>
                                    <button class="btn btn-sm btn-outline-primary ms-2" onclick="goToPage()">Go</button>
                                </div>
                            </div>
                            <% } %>

                        </div>
                    </div>                   
                </div>

            </main>
            <%- include('../../partials/footer-dashboard') %>
        </div>     
        </div>

        <!-- Import CSV Modal -->
        <div class="modal fade" id="importCSVModal" tabindex="-1" aria-labelledby="importCSVModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="importCSVModalLabel">Import User Data from CSV</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form action="/admin/import-users-csv" method="post" enctype="multipart/form-data">
                            <div class="mb-3">
                                <label for="csvFile" class="form-label">Select CSV File</label>
                                <input type="file" class="form-control" id="csvFile" name="csvFile" accept=".csv" required>
                            </div>
                            <div class="alert alert-info">
                                <small>
                                    <p>CSV file should have the following columns:</p>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <p><strong>Basic Information:</strong></p>
                                            <ul>
                                                <li>email (required)</li>
                                                <li>nama (name)</li>
                                                <li>asal_sekolah (school)</li>
                                                <li>paket</li>
                                                <li>program</li>
                                                <li>phone</li>
                                                <li>jenjang</li>
                                                <li>nama_ortu</li>
                                                <li>no_hp_ortu</li>
                                                <li>google_id</li>
                                                <li>photos</li>
                                                <li>isMember (Yes/No)</li>
                                            </ul>
                                        </div>
                                        <div class="col-md-6">
                                            <p><strong>Tryout Data (JSON format):</strong></p>
                                            <ul>
                                                <li>tokens</li>
                                                <li>examTaken</li>
                                                <li>examCompleted</li>
                                                <li>answers</li>
                                                <li>disqualifiedExams</li>
                                            </ul>
                                        </div>
                                    </div>
                                    <p>You can first export existing users to see the correct format for all fields.</p>
                                    <p>New users will be created with a default password: "britsedu"</p>
                                </small>
                            </div>
                            <div class="text-end">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary">Import</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
        <script src="<%= hostname %>dashboard/js/scripts.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/simple-datatables@latest" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js" crossorigin="anonymous"></script>
        <script>
            // Initialize Feather icons
            document.addEventListener('DOMContentLoaded', function() {
                feather.replace();
            });

            function changePageSize(newLimit) {
                const urlParams = new URLSearchParams(window.location.search);
                urlParams.set('limit', newLimit);
                urlParams.set('page', '1');
                window.location.href = window.location.pathname + '?' + urlParams.toString();
            }

            function goToPage() {
                const pageInput = document.getElementById('goToPage');
                const page = parseInt(pageInput.value);
                const maxPage = parseInt(pageInput.max);
                if (page >= 1 && page <= maxPage) {
                    const urlParams = new URLSearchParams(window.location.search);
                    urlParams.set('page', page);
                    window.location.href = window.location.pathname + '?' + urlParams.toString();
                } else {
                    pageInput.value = '<%= typeof pagination !== "undefined" ? pagination.currentPage : 1 %>';
                }
            }

            function resetUserSession(userId) {
                Swal.fire({
                    title: 'Reset Session?',
                    text: 'Are you sure you want to reset this user\'s session?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, reset it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/admin/reset-user-session/${userId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire(
                                    'Reset!',
                                    'Session has been reset successfully.',
                                    'success'
                                ).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Error!',
                                    'Failed to reset session: ' + data.message,
                                    'error'
                                );
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire(
                                'Error!',
                                'An error occurred while resetting the session',
                                'error'
                            );
                        });
                    }
                });
            }

            function resetUserExams(userId) {
                Swal.fire({
                    title: 'Reset Exam History?',
                    text: 'This will delete all exam progress. This action cannot be undone!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, reset it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/admin/reset-user-exams/${userId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire(
                                    'Reset!',
                                    'Exam history has been reset successfully.',
                                    'success'
                                ).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Error!',
                                    'Failed to reset exam history: ' + data.message,
                                    'error'
                                );
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire(
                                'Error!',
                                'An error occurred while resetting exam history',
                                'error'
                            );
                        });
                    }
                });
            }

            // Also update the delete user confirmation
            document.querySelectorAll('a[href^="/delete-user/"]').forEach(link => {
                link.onclick = function(e) {
                    e.preventDefault();
                    const href = this.getAttribute('href');
                    
                    Swal.fire({
                        title: 'Delete User?',
                        text: 'Are you sure you want to delete this user? This action cannot be undone!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = href;
                        }
                    });
                    return false;
                };
            });

            // If there's a message in the URL query params, show it
            const urlParams = new URLSearchParams(window.location.search);
            const message = urlParams.get('message');
            if (message) {
                Swal.fire({
                    title: 'Success!',
                    text: message,
                    icon: 'success',
                    timer: 3000,
                    timerProgressBar: true
                });
            }

            function acceptAsMember(userId) {
                Swal.fire({
                    title: 'Accept as Member?',
                    text: 'Are you sure you want to accept this user as a member?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, accept!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/admin/accept-member/${userId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire(
                                    'Accepted!',
                                    'User has been accepted as member.',
                                    'success'
                                ).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Error!',
                                    'Failed to accept user as member: ' + data.message,
                                    'error'
                                );
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire(
                                'Error!',
                                'An error occurred while accepting the user as member',
                                'error'
                            );
                        });
                    }
                });
            }

            function cancelMember(userId) {
                Swal.fire({
                    title: 'Cancel Membership?',
                    text: 'Are you sure you want to cancel this user\'s membership?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, cancel it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/admin/cancel-member/${userId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire(
                                    'canceled!',
                                    'User membership has been canceled.',
                                    'success'
                                ).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Error!',
                                    'Failed to cancel membership: ' + data.message,
                                    'error'
                                );
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire(
                                'Error!',
                                'An error occurred while cancelling membership',
                                'error'
                            );
                        });
                    }
                });
            }

            function deleteUser(userId) {
                Swal.fire({
                    title: 'Delete User?',
                    text: 'Are you sure you want to delete this user? This action cannot be undone!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/admin/delete-user/${userId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Server responded with an error');
                            }
                            return response.json();
                        })
                        .then(data => {
                            if (data.success) {
                                Swal.fire(
                                    'Deleted!',
                                    'User has been deleted.',
                                    'success'
                                ).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Error!',
                                    data.message || 'Failed to delete user',
                                    'error'
                                );
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire(
                                'Error!',
                                'An error occurred while deleting the user',
                                'error'
                            );
                        });
                    }
                });
            }

            // SweetAlert2 alert handling
            document.addEventListener('DOMContentLoaded', () => {
                const urlParams = new URLSearchParams(window.location.search);
                const message = urlParams.get('message');
                const error = urlParams.get('error');

                if (message || error) {
                    Swal.fire({
                        title: error ? 'Error!' : 'Berhasil!',
                        text: message || error,
                        icon: error ? 'error' : 'success',
                        confirmButtonColor: error ? '#dc3545' : '#28a745',
                        confirmButtonText: 'OK'
                    });

                    // Clear the URL parameters
                    const url = new URL(window.location.href);
                    url.searchParams.delete('message');
                    url.searchParams.delete('error');
                    window.history.replaceState({}, document.title, url);
                }
            });
        </script>
    </body>
</html>
